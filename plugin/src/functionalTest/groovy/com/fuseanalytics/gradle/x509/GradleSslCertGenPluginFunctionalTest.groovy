/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package com.fuseanalytics.gradle.x509

import org.gradle.testkit.runner.BuildResult
import org.gradle.testkit.runner.TaskOutcome
import spock.lang.Specification
import spock.lang.TempDir
import org.gradle.testkit.runner.GradleRunner

/**
 * A simple functional test for the 'com.fuseanalytics.gradle.x509.greeting' plugin.
 */
class GradleSslCertGenPluginFunctionalTest extends Specification {
    @TempDir
    private File projectDir

    private getBuildFile() {
        new File(projectDir, "build.gradle")
    }

    private getSettingsFile() {
        new File(projectDir, "settings.gradle")
    }

    def "run generateCert"() {
        given:
        settingsFile << ""
        buildFile << """
plugins {
    id('com.fuseanalytics.gradle.x509.SslCertGen')
}

certificate {
    commonName = "somedomain.com"
    organization = "Some Domain LLC"
    organizationUnit = "IT"
    city = "Niceville"
    region = "State"
    country = "US"
    keyPassword = "Hill of Beans!"
}
"""
        File certFile = new File( projectDir, "build/certificate/${projectDir.name}.pkcs12")
        when:
        GradleRunner runner = GradleRunner.create()
                .forwardOutput()
                .withPluginClasspath()
                .withArguments("generateCert")
                .withProjectDir(projectDir)
                .withDebug(true)
        BuildResult result = runner.build()
        then:
        result.task(":generateCert")?.outcome == TaskOutcome.SUCCESS
        certFile.exists()
        certFile.length() > 0
    }
}
