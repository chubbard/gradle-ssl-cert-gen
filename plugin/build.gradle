plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id 'com.gradle.plugin-publish' version '1.1.0'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.bouncycastle:bcprov-jdk18on:1.72",
            "org.bouncycastle:bcprov-ext-jdk18on:1.72",
            "org.bouncycastle:bcpkix-jdk18on:1.72"

    testImplementation 'org.spockframework:spock-core:2.3-groovy-2.5'
    testImplementation gradleTestKit()
}

gradlePlugin {
    //website = "https://github.com/chubbard/gradle-ssl-cert-gen"
    //vcsUrl = "https://github.com/chubbard/gradle-ssl-cert-gen.git"
    plugins {
        sslCertGen {
            id = 'com.fuseanalytics.gradle.x509.SslCertGen'
            implementationClass = 'com.fuseanalytics.gradle.x509.SslCertGenPlugin'
            displayName = 'Gradle SSLCertGen Plugin'
            description = 'This plugin creates a self-signed certificate'
            //tags.set(['ssl', 'keystore', 'tls', 'x509', 'certificate', 'self-signed'])
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    useJUnitPlatform()
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)

tasks.named('check') {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}

tasks.named('test') {
    // Use JUnit Jupiter for unit tests.
    useJUnitPlatform()
}
